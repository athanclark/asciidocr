{#-

Tera doesn't seem to support calling back and forth macros in recursion, so
unfortunately our block (and inline, for that matter) processing all has to be
done on a kind of `match`-like check, though as it also doesn't support a
`match` (to be fair: I don't know of many templating languages that do), we get
a long if-else chain. Perhaps there is a smarter way to do this, but for now,
this should work.

-#}
{%- import "inlines/inline.html.tera" as inline_macros -%}
{%- macro process_block(block) -%}
{%- if block.name == "section" -%}
{% set tag = "h" ~ block.level %}
<section data-type="sect{{block.level}}">
    {%- elif block.name == "list" -%}
    {%- if block.variant == "ordered" -%}
    {%- set tag = "ol" -%}
    {%- elif block.variant == "unordered" -%}
    {%- set tag = "ul" -%}
    {%- endif -%}
    {%- elif block.name == "open" -%}
    {%- set tag = "div" -%}
    {%- elif block.name == "listItem" -%}
    {%- set tag = "li" -%}
    {% elif block.name == "paragraph" -%}
    {%- set tag = "p" -%}
    {% elif block.name == "listing" -%}
    {%- set tag = "pre" -%}
    {% else %}
    {%- set tag = "UNHANDLED" -%}
    {%- endif %}
    <{{tag}}>
        {%- if block.name == "section" -%}
        {%- for inline in block.title -%}
        {{- inline_macros::process_inline(inline=inline) -}}
        {%- endfor -%}
        {%- elif block.name == "list" -%}
        {% for item in block.items -%}
            {{ self::process_block(block=item ) }}
        {%- endfor -%}
        {% elif block.name == "listItem" -%}
        <p>{%- for inline in block.principal -%}
            {{- inline_macros::process_inline(inline=inline) -}}
            {%- endfor -%}</p>
        {%- else -%}
        {% if block.inlines %}
        {%- for inline in block.inlines -%}
        {{- inline_macros::process_inline(inline=inline) -}}
        {%- endfor -%}
        {%- endif -%}
        {%- endif -%}
        {%- if block.blocks and block.name != "section" %}
        {%- for child_block in block.blocks %}
        {{- self::process_block(block=child_block )-}}
        {%- endfor -%}
        {% endif -%}
    </{{tag}}>
    {% if block.name == "section" %}
    {% if block.blocks -%}
    {% for child_block in block.blocks %}
    {{- self::process_block(block=child_block) -}}
    {%- endfor -%}
    {%- endif -%}
</section>
{%- endif -%}
{%- endmacro process_block -%}
